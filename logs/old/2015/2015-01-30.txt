--- Day changed 五  1月 30 2015
00:12 -!- chihchun is now known as chihchun_afk
00:26 < kcwu> 我現在才發現 udn 也用過 timemapper http://theme.udn.com/theme/story/7491/611427
00:26 < kcwu> kcwu's url: [濫殺、迷航…15件不能忘卻的2014國際大事 | 新聞懶人包 | 圖表看時事 | 時事話題]
00:29 < kcwu> 只是座標、時間不見得是對的 ...
09:49 < miaoski> 昨晚 irc 是 netsplit 還是真的這麼乾旱...
10:05 -!- seadog007_ is now known as seadog007
10:22 < slackbot> <wildjcrt> 欸，是不是應該把 <http://join.g0v.today/|http://join.g0v.today/> 放上 http://g0v.tw 首頁？
10:22 < slackbot> <wildjcrt> 剛剛還是用 google 找到的，網站上翻了 5 分鐘找不到連結 XD
11:29 < Lee1092> wildjcrt 直接發 pr 了!?  XD 
12:08 < slackbot> <wildjcrt> 現在還沒時間 XD 先來喊一下
12:29 -!- chihchun_afk is now known as chihchun
12:47 -!- chihchun is now known as chihchun_afk
13:01 -!- chihchun_afk is now known as chihchun
13:19 -!- pcchou_ is now known as pcchou
14:25 -!- chihchun is now known as chihchun_afk
14:58 < charge> @slackbot
14:58 -!- charge [guest-char@gateway/web/scrollback.io/x-yavxirckqalbislx] has left #g0v.tw []
15:10 -!- chihchun_afk is now known as chihchun
15:26 -!- chihchun is now known as chihchun_afk
15:28 < slackbot> <clkao> 明天簡報搶先版：<https://speakerdeck.com/clkao/wang-lu-fa-zhan-qu-shi-yan-xi-ying>
15:28 < kcwu> slackbot's url: [網路發展趨勢研習營 // Speaker Deck]
15:28 < slackbot> <clkao> 還要刪一些內容
15:28 < slackbot> <clkao> 最後一張想要延續「劣即是夯」：既然公務員淘汰機制形同虛設，各位就放手去做 open data 吧
15:40 < yhsiang> clkao++
15:40 < slackbot> <poga> clkao++
15:40 < zhiqiangz> helo
15:44 < astro> 要怎麼用 curl 設 3rd-party domain 的 cookie?
15:45 < astro> curl --cookie "aaa=111" http://localhost/  這個cookie是 same origin 
15:53 < kcwu> astro: why do so? http request 的 cookie 有分 domain 嗎?
15:54 < CindyLinz> 印象中 request 裡的 cookie 不能指定 domain...
15:56 < astro> 我們某個service會3rd-party domain的狀態設cookie在user的browser上. 但在設之前會先檢查之前是不是已經設過.
15:57 < astro> 我想用curl測試這個behavior是不是正常的
15:58 < yhsiang> 你需要的可能是 phantomjs ? XD
16:00 < gugod> 嗯... 這要怎麼檢查是否已經設過 ? (如果 domain 不同的話)
16:04 < slackbot> <kiang> 找了一下，發現要找一台支援網路直播的相機（不是 DV ）難度還蠻高的，外國人聊相機怎麼都聊的這麼深入...
16:06 < kcwu> astro: 為什麼你可以設別人 domain 的 cookie?
16:07 < yhsiang> kcwu: 我猜是3rd 用 js 設的 XD
16:11 < astro> yhsiang: yes. 
16:12 < astro> 在 A domain 的web下塞 B domain 的 image. 在 get B domain image時設的
16:13 < yhsiang> curl 沒辦法幫你執行 js 吧? XD
16:13 < yhsiang> 所以我才猜說大概需要 phatomjs 之類的
16:14 < kcwu> 這個 "行為" 發生在 browser 端, 可是 curl 是用來測 server 的, 不是 browser 的
16:18 < astro> 嗯
16:22 < CindyLinz> astro: 用 curl 來模擬的話.... 應該就.. curl 兩次, 一次去 html, 一次去那個 image.. ^^|
16:22 < CindyLinz> astro: 那你去 curl image 的時候, 就可以送這個 third-party cookie 了
16:23 < CindyLinz> 喔不過 js 不會動.. ^^|
17:15 < miaoski> 這個有沒有電子化呢？
17:15 < miaoski> http://ip194097.ntcu.edu.tw/memory/TGB/thak.asp?id=836
17:15 < kcwu> miaoski's url: [台語文記憶]
17:19 < miaoski> http://zh.wikisource.org/wiki/%E5%8D%83%E9%87%91%E8%AD%9C 這裡有裡面的漢字
17:19 < kcwu> miaoski's url: [千金譜 - 维基文库，自由的图书馆]
17:27 < mayingjeou> 我愛馬英九
17:28 < mayingjeou> 我愛馬英九
17:28 < mayingjeou> 我愛馬英九我愛馬英九
17:28 < mayingjeou> 我愛馬英九
17:28 < mayingjeou> 我愛馬英九
17:28 < CindyLinz> mayingjeou: 可以講點充實點的嗎.....ww
17:29 < mayingjeou> 我愛馬英九
17:29 < mayingjeou> 我愛馬英九
17:30 < mayingjeou> 我愛馬英九
17:30 < mayingjeou> 我愛馬英九
17:31 < mayingjeou> 我愛馬英九
17:31 < mayingjeou> 我愛馬英九
17:32 < CindyLinz> 開始想念 S3p_lin 的洗頻... (誤
17:32 < mayingjeou> 我愛馬英九
17:32 < mayingjeou> 我愛馬英九
17:33 < mayingjeou> 我愛馬英九
17:33 < mayingjeou> 我愛馬英九
17:33 < S3p_lin> CindyLinz: @_@
17:33 < CindyLinz> S3p_lin: 比較有內容 XD
17:34 -!- mode/#g0v.tw [+o ronnywang] by ChanServ
17:34 <@ronnywang> 竟然自己跑了...
17:35 < CindyLinz> XD
17:35 -!- mode/#g0v.tw [-o ronnywang] by ronnywang
17:35 < pau1c> hello
17:37 < ronnywang> pau1c: 歡迎光臨
17:39 -!- pau1c [~paulc@211-20-66-158.HINET-IP.hinet.net] has left #g0v.tw []
18:13 < slackbot> <pofeng> 問一下 DES 加密原理
18:14 < slackbot> <pofeng> 是不是也是一樣, 如果兩個加密後的值, 一模一樣 ( eg: 身份證字號), 就代表兩組加密前的字串是一樣的
18:14 < CindyLinz> 中間有一串神祕的 S-box.. 不知道要怎麼解釋.....ww
18:15 < CindyLinz> pofeng: 對.. 會一一對應
18:15 < CindyLinz> 假設你密碼都是正確地選一樣
18:19 < slackbot> <pofeng> CindyLinz: 啊對喔, 還要考慮密碼 ... (密鑰 =>對嗎?)
18:19 < hcchien> yhsiang: 問一下，這個頁面是用什麼 api 組的呢 # http://vote.ly.g0v.tw/vote/normal/
18:19 < kcwu> hcchien's url: [立委投票指南:全表決檢索]
18:20 < CindyLinz> pofeng: 隨便啦... 我都記不太清楚專有名辭 XD
18:20 < slackbot> <pofeng> CindyLinz: 國衛院釋放的健保資料庫加密, 聲稱有用 DES 加密
18:20 < CindyLinz> pofeng: DES 是對稱式的, 加密解密用的 key 一樣
18:20 < CindyLinz> pofeng: DES 已經被列為很不安全不可使用了吧 OAO
18:20 < CindyLinz> pofeng: 至少也要用 3DES 呀 @_@"
18:21 < slackbot> <yurenju> DES... 要怎麼安全的運送 key 呢...
18:22 < slackbot> <pofeng> 如果我要用我診所所有病人的身份證字號, 去暴力猜, 是不是要先猜密鑰(密碼)
18:22 < S3p_lin> 寫在紙條上... XD
18:22 < CindyLinz> yurenju: 那不在 DES 的業務範圍, 請自理..... XDXD
18:23 < CindyLinz> pofeng: 暴力猜的話是猜密碼.. 不過有比暴力猜快的方法 @@"
18:23 < S3p_lin> http://www.ettoday.net/news/20121107/124175.htm 或是像這樣子寫密碼上去 XD
18:23 < kcwu> S3p_lin's url: [解開密碼直上東大！情報理工學院「招生海報」藏玄機 | ETtoday新奇新聞 | ETtoday 新聞雲]
18:24 < slackbot> <pofeng> @yurenju: 健保局聲稱 DES 加密後的身份證字號就是非個資, 但是我很擔心...
18:24 < CindyLinz> 喔喔.... 依法律的話聽說的確是有加密就可以規避.... XD
18:24 < CindyLinz> 可以用個..... caesar 加密法 XD
18:25 < gugod> 個資加密後就變成非個資... 這問題已經進行哲學層次了
18:25 < gugod> 進入*
18:25 < CindyLinz> XDXD
18:25 < slackbot> <kiang> 覺得還是不要有規則比較好...
18:26 < slackbot> <yurenju> CindyLinz, 也是拉... @pofeng,  『加密後的身份證字號就是非個資』我不會這麼樂觀就是了...
18:26 < slackbot> <yurenju> Slack <--> IRC 互通蠻有趣的
18:27 < slackbot> <pofeng> CindyLinz : ok 用 DES 弱點攻擊, 那如果健保局用 3DES 加密身份證字號, 你也認同這就沒有個資問題了嗎 ? ( 健保局有個光碟庫有 200萬人, 上面有密的身份證字號, 和藥物, 檢查等資料 )
18:27 < CindyLinz> yurenju: 我要花更多的時間辨認出哪一個是講話的人, 哪一個是聽話的對象, 找出我要丟話的對象..........||
18:28 < slackbot> <pofeng> gugod: 我是認為, 如果很難 re-identification 的話 (eg: 50 年) 我可以接受那個不是個資
18:29 < S3p_lin> 身分證字號的明文範圍縮小很多, 先硬幹把 3DES key 破出來, 其他資料或許就跟著解出來...
18:29 < slackbot> <yurenju> 這看起來很不可靠，假如說我知道某人的部分醫療資訊，基本就可以縮小範圍嘗試找出這個人所有的醫療資料了，不知道重複的資料有多少需要篩選
18:30 < slackbot> <yurenju> @pofeng: 是所有資料都加密，還是只有身分證加密？
18:30 < slackbot> <kiang> 只有身份証吧
18:30 < slackbot> <yurenju> hummmmm
18:30 < S3p_lin> 健保局大概不會把各種資料用不同的 KEY 加密吧
18:30 < slackbot> <pofeng> @yurenju:  應該只有身份証
18:30 < slackbot> <yurenju> 聽起來有點危險，這份資料已經有很多人買去了？
18:30 < gugod> 我無法理解「加密後的個資 不等於 個資」這樣的邏輯。 感覺起來這個資料集需要的是匿名化，而不是加密
18:30 < slackbot> <pofeng> 對很多
18:31 < CindyLinz> pofeng: 我覺得...... 如果這樣加密放出來.. 需要身份證字號會每十年換一次的機制才不會不安全 XD
18:31 < slackbot> <yurenju> 這樣還是留有很獨特的個人特徵，會想說這樣可以匿名也太天真的...
18:32 < CindyLinz> 連那種超長的 private key 都需要三五年就換一次了... 身份證字號這麼短...........ww
18:32 < slackbot> <yurenju> 私家偵探應該都買一份...
18:32 < CindyLinz> 我是說.. 拿來當 signature 意義使用的 private key
18:32 < slackbot> <kiang> @pofeng 有資料範例嗎？看看有沒有人想試試破解去打臉 XD
18:32 < slackbot> <pofeng> 因為要開庭了, 可是 2/5  我沒辦法去臺權會開會, 所以來這裡求救
18:33 < slackbot> <pofeng> 有人帶光碟來, 我可以提供我診所的身份證字號來攻擊看看
18:33 < gugod> yurenju: 個人特徵和個人身份證字號是有頂顯著差異的
18:33 < slackbot> <yurenju> gugod, 我的意思是，比如說我有我爸部分的醫療資料，我就可以從這份資料來查出我爸的所有的醫療資訊
18:34 < slackbot> <pofeng> ( 3/26 開庭 )
18:35 < gugod> yurenju: agree
18:35 < CindyLinz> 有哪位黑黑想要破解這些 DES 資訊嗎? 這邊有心法集 (逃) # http://lasec.epfl.ch/memo/memo_des.shtml
18:35 < kcwu> CindyLinz's url: [LASEC]
18:35 < slackbot> <hychen> pofeng: 我很好奇有哪個加密方式可以撐過50年 :stuck_out_tongue:
18:35 < kcwu> yes, 用 yurenju 的方法不需要身分證欄位就可以認出很多人了
18:36 < slackbot> <yurenju> 或者可以縮小到很小的範圍
18:36 < slackbot> <kiang> 特徵比對的問題記得美國也吵過，很多案例即時不透過身份證字號，透過其他資料庫交叉比對也有很高的命中率
18:36 < gugod> 如果我服用的某罕用藥基本上可以用來推測我是屬於很小群體之一... 加上條件機率應該可以到很準
18:36 < slackbot> <yurenju> 這樣買了一份，就可以去查名人的病例了，可以關心一下馬小九的健康狀況之類
18:36 < slackbot> <hychen> 不過加密後也可能會被認出身份
18:36 < slackbot> <hychen> 特徵明顯加密後還是特徵明顯 XDXD
18:37 < slackbot> <pofeng> gugod: 美國 HIPPA 是規定要刪掉社會安全卡號碼
18:37 < gugod> 但那跟直接有幾個欄示身份... 其實是有很大差別的
18:37 < slackbot> <pofeng> gudog, 但是台灣就說加密後不是個資, 所以可以釋放出來 (正在打官司)
18:38 < slackbot> <pofeng> @hychen: 所以我贊成刪掉身份證字號啊, 不是加密
18:39 < slackbot> <pofeng> gugod, sorry typo
18:39 < gugod> 就算資料有加密... 那也只表示(一定程度上)第三方不會得到資料，只能算是「在控制資料的散佈對象」吧
18:41 < gugod> 畢竟合理取得資料的人也是可以解密的啊 :/
18:41 < gugod> pofeng: np
18:41 < kcwu> pofeng: 確認是用 56bit 的那個 DES? 不是 3DES
18:42 < slackbot> <yurenju> 刪除還是比較好一點，否則還是可以輕易追蹤特定人
18:44 < slackbot> <pofeng> kcwu: 不確定, 是舊資料 101 年: <http://archive.rdec.gov.tw/public/Data/392610522571.pdf>
18:45 < gugod> 我比較傾向於「個資不管怎麼變化 (decopule / truncate / encrypt / hash )，都還是個資」這個概念 :-p 畢竟只是精度變了而已。
18:45 < slackbot> <pofeng> kcwu: 網站: <http://nhird.nhri.org.tw/talk_02_good_view.php?kind_id=6&amp;list_n=13>
18:45 < kcwu> slackbot's url: [全民健康保險研究資料庫]
18:46 < slackbot> <pofeng> <http://nhird.nhri.org.tw/brief_04.htm>
18:46 < slackbot> <yurenju> gugod++
18:47 < slackbot> <pofeng> gugod,  我同意但是現在要說服法官, 其實第一次敗訴, 現在再上訴, 高院發回更審 (可能用詞不精確)
18:52 < kcwu> DBMS_OBFUSCATION_TOOLKIT 看起來可能是 DES 或 3DES http://docs.oracle.com/cd/B19306_01/appdev.102/b14258/d_obtool.htm#BHBIEGHF
18:53 < kcwu> wikipedia 說有專用機 brute force attack DES 不到一天就夠了 http://en.wikipedia.org/wiki/Data_Encryption_Standard#Brute_force_attack
18:53 < kcwu> kcwu's url: [Data Encryption Standard - Wikipedia, the free encyclopedia]
18:54 < slackbot> <pofeng> kcwu: 感謝情報
18:57 < gugod> pofeng: 那真糟啊。  雖然並不清楚辯論情境... 但我個人認為這問題癥結應該不在「加密」或是「演算法強度」吧。就算是無敵加密（無法被第三方解密），合理/合法得到加密後資料的第二方也還是可以解密後，得到原始資料集。  
18:58 < slackbot> <pofeng> kcwu: 如果是 3DES 就很難了嗎 ? 就你的看法, 你可以接受加密後就不是個資的這個說法嗎 ?
18:59 < slackbot> <pofeng> "本次受命法官王俊雄，整理雙方三爭點: 健保署將健康保險資料委託國衛院建置資料庫、以及給衛福部成立協作中心。
18:59 < slackbot> 1. 資料是否去識別化?(對造表示去識別化即不屬於個資法範圍)
18:59 < slackbot> 2. 是否符合個資法16條?
18:59 < slackbot> 3. 原告是否可以行使事後停止利用請求權?"
18:59 < gugod> pofeng: 所以如果那個「第二方」如果並不是 control group...  就會有問題。 
19:06 < gugod> pofeng: 講 control group 好像怪怪的... 我想表示的是，比方說那光碟，如果是隨意讓人索取的，沒有限制，那顯然第一方跟本不知道有誰把資料拿去了。問題就比較明顯。 
19:07 < gugod> pofeng: 但這大概跟目前的辯論方向沒關係 XD
19:11 < kcwu> 不知道 "去識別化" 怎麼定義的, 把身份證字號反過來寫應該不算?
19:12 < kcwu> "加密" 是否正確使用/實作 也不見得能一概而論
19:16 < kcwu> pofeng: 如果是譬如每個人用來加密的 key 不一樣, 那我可以同意. 若是現在這樣都一樣, 我會認為那是難以利用的個資. 
19:17 < slackbot> <pofeng> 個資法 第二條:
19:17 < slackbot> "個人資料：指自然人之姓名、出生年月日、國民身分證統一編號、護
19:17 < slackbot> 照號碼、特徵、指紋、婚姻、家庭、教育、職業、病歷、醫療、基因
19:17 < slackbot> 、性生活、健康檢查、犯罪前科、聯絡方式、財務情況、社會活動及
19:17 < slackbot> 其他得以直接或間接方式識別該個人之資料。"
19:18 < slackbot> <pofeng> 個人資料保護法施行細則修正條文 第　三　條          
19:18 < slackbot> 本法第二條第一款所稱得以間接方式識別，指保有該資料之公務或非公務機關僅以該資料不能直接識別，須與其他資料對照、組合、連結等，始能識別該特定之個人。
19:18 < kcwu> 那個 encrypted字號, 除了在這個資料庫中出現之外, 還有在其他地方用嗎?
19:19 < kcwu> 如果有的話, 就可以彼此link間接識別
19:20 < slackbot> <pofeng> 暫離 抱歉
19:23 < kcwu> "其他資料"不知有沒有定義...  若是無敵加密, 手上握有 key 的人相當於 virtually 握有一個 encrypted ID 跟 ID 的對照表.
19:24 < kcwu> 不知道能不能說 "virtual table" = 其他資料, 對照之後便能識別特定之個人
19:28 < kcwu> hmm, 覺得這樣講怪怪的.
19:32 < kcwu> gugod: 無敵加密的一個特例: 把釋出的 data 加上流水號. 另外有個 "key table" 有流水號跟ID的mapping. 流水號(若沒在它處使用)應該不能視為個資吧
19:34 < kcwu> 所以可能還是要在加密強度下手
19:34 < slackbot> <pofeng> uuid ?  au 之前就是建議用 uuid
19:35 < slackbot> <pofeng> kcwu 不過你講得對, 有 key 就能解開, key 也算其他資料, 所以當然是個資
19:37 < slackbot> <pofeng> 只是實行細則 17 條寫: 本法第九條第二項第四款、第十六條但書第五款、第十九條第一項第四款及第二十條第一項但書第五款所稱資料經過處理後或依其揭露方式無從識別特定當事人，指個人資料以代碼、匿名、隱藏部分資料或其他方式，無從辨識該特定個人。
19:37 < slackbot> <pofeng> 或許直接攻擊, 加密過得個資, 仍然是個資, 會比攻擊加密強度來得有效 ? (不確定)
19:38 < kcwu> pofeng: 那你覺得流水號這個例子, 可以算個資嗎
19:39 < au> (我建議用 uuid 是因為它是無序的流水號)
19:39 < au> 連相對出生日期的 implication 也沒有
19:40 < slackbot> <pofeng> kcwu 我覺得還是算個資, 因為我不信任有那個 table 的人, 我的立場是刪掉 , 才能放出來
19:41 < slackbot> <pofeng> kcwu 我實在是不知道作研究為什麼需要有加密的身份證字號
19:41 < slackbot> <pofeng> kcwu 鐵定就是要偷偷串連到其他資料庫啊
19:41 < slackbot> <pofeng> 不過或許我太嚴格了
19:46 < au> UUID version 4 (亂數) 不能作 foreign key 外連，只能在單一資料集裡使用，也可以要求每次釋出資料集必須重新產生。
19:46 < slackbot> <seadog007> 弄叢集來暴力破解很快啊
20:03 < a-tsioh> au:Hi !  把jquery ui的autocomplete 變成React Componenent 很簡單，可是萌典的autocomplete有點……
20:05 < a-tsioh> 我把 main.ls 的init-autocomplete 的內容放在views.ls 的一個Component的componentDidMount 就可以
20:05 < a-tsioh> （大概)
20:05 < a-tsioh> 可是這樣不太好看
20:05 < au> 沒關係，先 push 到某個 branch?
20:06 < a-tsioh> https://github.com/a-tsioh/moedict-webkit的master
20:06 < au> 本來萌典的 autocomplete 用法就不是很標準 # "Your stdio isn't very std." — lwall
20:06 < a-tsioh> （不過是buggy的）
20:07 < a-tsioh> I didn't connect the change in LANG yet
20:07 < a-tsioh> so it stick to the one used when the comp is first rendered
20:07 < au> a-tsioh++ # ok, 待會來看。也許 view.ls 未來可以專門有個 React Native build
20:08 < au> main.ls 就可以專門做邏輯了 (autocomplete 抽出後已經很接近了)
20:08 < a-tsioh> 問題是autocomplete的ajax calls
20:08 < a-tsioh> 是邏輯嗎？
20:09 < a-tsioh> for now I pass GET and CACHED as React props
20:09 < a-tsioh> but I put trs_lookup and pinyin_lookup callbacks inside the component
20:10 < a-tsioh> (and I still have to manually render the component inside the old init-autocomplete@main.ls)
20:11 < au> that sounds reasonable as a first sketch, certainly more so than stateful async components à la http://andreypopp.viewdocs.io/react-async
20:11 < kcwu> au's url: [react-async :: viewdocs.io]
20:11  * a-tsioh 上中文課沒有學到怎麼談程式...:p
20:11 < au> lol
20:13 < a-tsioh> (有沒有人想用這邊的log寫一本課本:p)
20:14 < a-tsioh> I'll try to stick with this architecture, but I'm a bit afraid of breaking other autocompletes
20:16 < au> well it's open source, if we break it we get to keep both parts :p so no worries, just get trs working and I'll take care of backporting
20:16 < a-tsioh> hehe fine
20:23 < miaoski> CindyLinz: 別鬧了... CAESAR :P 妳知道身份證字號很 sparse 吧 :P
20:23 < miaoski> 而且還有檢查碼 XD
20:25 < kcwu> 反過來寫不好嗎
20:32 < miaoski> a-tsioh: 這種課本太困難了吧... 雖然我們兩個應該是寫這種課本的人選 (咦)
20:32 < miaoski> kcwu: XDD 不用反過來寫，把十位數弄亂也可以 XD
20:34 < miaoski> DES 多人分持就覺得比較安全是什麼概念 (看完 PDF 驚呆了)
20:35 < slackbot> <kiang> 多人分持 = 出問題的時候踢皮球比較好用 XD
20:36 < slackbot> <yurenju> slack 的 channel 是可以自己隨意開嗎？
20:36 < miaoski> kiang: 多人分持 = 我們只有一小部份，一定不是我們洩密的，超級安全的
20:36 < miaoski> kiang: zero day = 這個沒辦法防禦的啊，所以不是我沒盡到做好系統安全的責任，是駭客太壞了 (cf. Sony Entertainment 事件)
20:38 < slackbot> <yhsiang> yurenju: 請隨意開
20:38 < slackbot> <yurenju> @yhsiang: thanks :smile:
20:39 < slackbot> <yhsiang> yurenju: 反正有管理者 若是有不妥就會被砍掉 XD
20:40 < slackbot> <yurenju> :+1:
20:41 < a-tsioh> miaoski++  g0v俗語 101 ? 
20:41 < miaoski> a-tsioh: 華語商業會話 - 電腦工程師 篇?
20:41 < miaoski> (先從工具人、正妹三寶、PTT 開始教起...)
20:42 < a-tsioh> why so serious ?
20:42 < miaoski> 媽呀想到就覺得好難，學的人會哭
20:42 < miaoski> a-tsioh: 因為「視聽華語」非常 serious 啊，我看到都想哭惹... 「○○很有意思！」 ← 什麼鬼，台灣哪有人這樣講話
20:46 < slackbot> <yhsiang> miaoski 有啊 魷魚絲廣告
20:46 < miaoski> yhsiang: 然後咧... 快給我第二個例子
20:46 < slackbot> <yhsiang> miaoski <https://www.youtube.com/watch?v=Wbv7YRCdYKQ>
20:46 < kcwu> slackbot's url: [珍珍魷魚絲，真正有意思 - YouTube]
20:46 < slackbot> <yhsiang> XD
20:47 < miaoski> 不然以後你就叫 有意思LY 了 XD
20:47 < slackbot> <yhsiang> ok喔
20:47 < slackbot> <yhsiang> 阿美語
20:47 < miaoski> 台灣的用法明明是「ㄟ 他好像對你有意思」 XD
20:47 < a-tsioh> miaoski: 所以我沒有讀過XD
20:47 < miaoski> a-tsioh: GJ ... 
20:48 < slackbot> <yhsiang> miaoski:  XD
20:52 < CindyLinz> miaoski: 我那是說... 純應付法規啦~
20:53 < a-tsioh> 1:37的廣告o_O
20:53 < slackbot> <poga> 明天設計松... 想把手上東西提供給設計師們大改造的快來填喔～ <https://g0v.hackpad.com/g0v-design-%E7%AC%AC%E9%9B%B6%E6%AC%A1%E8%A8%AD%E8%A8%88%E6%9D%BE-7ndCfX4RoBm>
20:53 < kcwu> slackbot's url: [g0v-design 第零次設計松 - g0v.hackpad.com]
20:54 < slackbot> <poga> 已經準備好接受 leve1up 被各種指教...
20:57 < slackbot> <yhsiang> poga: 這不是超強 poga ?
20:57 < slackbot> <moon_c> 這不是超強 poga ?
20:58 < slackbot> <poga> moon_c: 這不是當初一看到 leve1up 就說「這好醜...」的超強設計師嗎
20:58 < slackbot> <moon_c> 要把坑整理在hackfoldr也可以<http://beta.hackfoldr.org/designer>
20:59 < slackbot> <moon_c> @poga: 我沒有說好醜啊，我只是不知道怎麼用（好像一樣慘
21:02 < slackbot> <yhsiang> XD
21:02 < slackbot> <johnny> hcchien: 資料的api http://vote.ly.g0v.tw/api/vote/ ，頁面+搜尋是用elasticSearch # <http://vote.ly.g0v.tw/vote/normal/>
21:02 < slackbot> <yhsiang> 立委投票指南苦主要出來了
21:02 < kcwu> slackbot's url (2/2): [立委投票指南:全表決檢索]
21:02 < kcwu> slackbot's url (1/2): [立委投票指南APIs]
21:03 < slackbot> <yhsiang> johnny 要做個倒數頁面嗎 XD
21:03 < slackbot> <johnny> 又被 ly抓到！
21:03 < slackbot> <moon_c> 苦主明天看有沒有小精靈跳坑～
21:04 < slackbot> <johnny> yhsiang: 倒數選舉嗎？選舉日好像還沒出來ㄟ
21:04 < slackbot> <yhsiang> johnny 有內線 A__A
21:05 < slackbot> <johnny> moon_c: 耶！
21:07 < slackbot> <johnny> 正在準備做讓擬參選人登入編輯了，趕快來釋出一個超醜的先
21:08 < slackbot> <moon_c> @johnny: 超醜的先來，跳坑潛力大增！！！
21:09 < slackbot> <hychen> moon_c++
21:19 < slackbot> <johnny> moon_c: 一些想法先寫在hackpad 了，但明天實體無法到場
21:29 < slackbot> <kiang> t0mst0ne: http://drugs.olc.tw/ingredients/index/Triamcinolone 這些都是一樣的東西嗎？
21:29 < kcwu> slackbot's url: [Triamcinolone 相關藥品成份一覽 @ 藥要看]
21:30 < slackbot> <johnny> 關於讓擬參選人上來編輯，我有一些困擾，目前設計是想說用social auth登入後，填參選基本資料，這時候遇到的問題是，如果有很多登入然後些他是蔡正元，該怎麼防堵
21:32 < slackbot> <kiang> johnny: 而且助理代為處理的狀況普遍，所以個別資料需要有多位能夠編輯的人，然後異動記錄也得保留(才知道誰做了這個編輯）
21:34 < slackbot> <johnny> kiang: 要多個能編輯可能就申請的gmail來登入，不過還是不知怎麼防一堆都填同一個名字的造假狀況
21:36 < slackbot> <t0mst0ne> kiang: http://en.wikipedia.org/wiki/Triamcinolone  後面接的化學式不同, 途徑不同, 應該不能說一樣 ; 但主成份是一樣, 都是合成類固醇
21:36 < kcwu> slackbot's url: [Triamcinolone - Wikipedia, the free encyclopedia]
21:36 < slackbot> <noracami> 請他們去驗證成官方帳號?
21:37 < slackbot> <t0mst0ne> kiang: 如果要做 drug-drug interaction 應該只取 Triamcinolone 比較好比對 ;  但是仿單就沒辦法這樣一視同仁
21:39 < slackbot> <johnny> noracami: 但可能有第一次參選的人，他們沒有官方帳號
21:39 < slackbot> <yhsiang> johnny: 給問的做法是請對方提供一組facebook帳號 XD
21:41 < slackbot> <kiang> @t0mst0ne 因為公告的資訊都只有這樣，變成需要一個一個標記
21:42 < slackbot> <johnny> yhsiang: fb 也蠻容易申請一些分身帳號的阿，給問最終是有人寄帳密給候選人嗎？
21:42 < slackbot> <yhsiang> johnny 我覺得設計成 你可以開放給某個 mailing list 申請帳號
21:43 < slackbot> <yhsiang> 然後你讓你信任的人在這個 mailing list裡面 然後可以approve 帳號
21:43 < slackbot> <yhsiang> johnny: 採用 facebook Oauth 不需要記帳密 XD
21:44 < slackbot> <yhsiang> johnny: 申請分身是一回事 但只有那個facebook uid 能夠編輯
21:44 < slackbot> <yhsiang> 這才是重點 XD
21:46 < slackbot> <johnny> yhsiang: 喔喔所以請候選人把他們的fb 帳號給你們，你們建進whist list，但這對現任的可能還OK，但如果真的有個內湖名字叫蔡正元的人也想參選，就很難了，感覺就醫定要人工作一堆確認可能還不一定正確
21:46 < slackbot> <yhsiang> johnny: 這個本來就需要人工的 就需要我講的那樣
21:47 < slackbot> <johnny> yhsiang: 恩但人工還是不知道怎麼解決一堆造假申請阿，因為它可能就真的是叫蔡正元也想選
21:48 < slackbot> <yhsiang> 誰能不能選都是要等登記那天 XD
21:48 < slackbot> <noracami> https://www.facebook.com/help/100168986860974
21:48 < slackbot> 參選人應該就可視為公眾人物，現在在臺北也有分公司，也許可問問看XD
21:48 < kcwu> slackbot's url: [我是否可要求驗證我的粉絲專頁或個人檔案？ | Facebook 使用說明 | Facebook]
21:51 < au> 由 OCF.tw 申請 MOICA 介接到 OAuth 2.0 & OpenID Connect，請蔡正元刷一次卡來認證助理?
21:51 < au> http://moica.nat.gov.tw/check_apply.html
21:51 < kcwu> au's url: [MOICA內政部憑證管理中心-身分確認服務申請]
21:51 < au> (刷一次卡 = 自然人憑證)
21:52 < slackbot> <yhsiang> au++ 這個好 high XD
21:53 < slackbot> <johnny> au: 這個感覺能解決XD，不過可能要有客服服務
21:54 < slackbot> <yhsiang> 只好敝公司來接了 :stuck_out_tongue:
22:02 < au> yhsiang: 要接就填個表 XD 有問題可以問戶政司長 wanda ( moi1540 at moi )，前天聽 wanda 說很想推 estonia 式的 e-citizenship 和 CA 介接。
22:03 < slackbot> <yurenju> @demogorgan: our channel is #appy
22:04 < slackbot> <yhsiang> au: hmm .. 可以接我們自己的 Oauth?
22:06 < au> yhsiang: 似乎可以，TDCC 集保也是接到民間的 stockvote
22:06 < au> http://moica.nat.gov.tw/link_in_1433fdd6b9e000004f9f.html
22:06 < kcwu> au's url: [MOICA內政部憑證管理中心-應用系統網站連結-台灣集中保管結算所「股東e票通」]
22:06 < slackbot> <johnny> au: 請問 CA 是什麼？
22:07 < slackbot> <yhsiang> au:  thx :simple_smile:
22:07 < au> johnny: 數位憑證認證機構 ( Certificate Authority )
22:07 < slackbot> <johnny> 了解 Thanks
22:18 -!- favonia_ is now known as favonia
22:22 < favonia> slackbot: 這樣子可能要有 privacy policy.
22:23 < yhsiang> favonia: 你要跟 <> 裡面的人對話
22:23 < yhsiang> ]/win 6
22:25 < slackbot> <seadog007> XD
22:25 < slackbot> <seadog007> 跟 slackbot對話沒用啦 可以直接去裝 slack 比較方便
22:27 < CindyLinz> slackbot 可以作成會用 N 個連線登入成 N 個 nick 的設計嗎? ^^|
22:29 < slackbot> <yhsiang> CindyLinz 因為g0v頻道太多人 所以無法做這個 XD
22:29 < CindyLinz> 有限 IP 喔?
22:29 < slackbot> <yhsiang> 本來的 bot 有 listen event
22:29 < slackbot> <yhsiang> 但是irc 人數太多 會超出 listen的限制 ... XD
22:30 < CindyLinz> yhsiang: slackbot 有掛在線上的效果嗎?
22:30 < CindyLinz> 也許我該試用一下就知道了? XD
22:30 < slackbot> <yhsiang> 或看 source code :stuck_out_tongue:
22:30 < slackbot> <yhsiang> 我記得我把那個功能 disable
22:31 < slackbot> <yhsiang> 這邊歡迎 patch XDD
22:32 < CindyLinz> slackbot 是.... 讓使用者從 web 介面使用 irc 嗎?
22:32 < CindyLinz> 還找不到入口 XD
22:32 < slackbot> <yhsiang> CindyLinz: 是用 slack, join.g0v.today
22:32 < slackbot> <yhsiang> 然後 http://g0v-tw.slack.com
22:32 < kcwu> slackbot's url: [Slack]
22:33 < slackbot> <yhsiang> CindyLinz: <https://github.com/g0v/slack-irc-plugin>
22:33 < kcwu> slackbot's url: [g0v/slack-irc-plugin · GitHub]
22:33 < CindyLinz> 娃... 連 slack.com 是什麼都還不知道 囧
22:34 < CindyLinz> 先去補補基礎知識 ._.
22:37 < slackbot> <clkao> au: 要來提案個 moi / oauth provider gateway 嗎
22:40 < au> clkao: 好像不錯，vtaiwan 後天上線後應該會比較有空，來想想架構怎麼做
22:42 < slackbot> <clkao> 這真的造福人間
22:42 < slackbot> <yhsiang> au++ XD
22:42  * au 正在畫醜醜的 https://speakerdeck.com/audreyt/vtaiwan-yun-zuo-liu-cheng 示意流程圖，希望設計松有小精靈美化一下
22:49 < slackbot> <yhsiang> jedi: <(_ _)>
22:50 < slackbot> <clkao> 為何警政署網站出現 g0v 為相關網站連結？ # <http://www.npa.gov.tw/>
22:50 < kcwu> slackbot's url: [中華民國內政部警政署警政治安全球資訊網]
22:50 < slackbot> <yhsiang> 真的欸 XDD
22:50 < slackbot> <clkao> XD <http://www.npa.gov.tw/NPAGip/wSite/lp?ctNode=11468&amp;xq_xCat=5&amp;mp=1>
22:50 < CindyLinz> 不相關嗎? XD
22:50 < kcwu> slackbot's url: [相關網站連結中華民國內政部警政署警政治安全球資訊網]
22:51 < slackbot> <kiang> 表示這邊被輿情研究單位盯上了？ XD
22:52 < miaoski> kiang: 那要看看有沒有人 9:30 上線 5:30 下線？(大誤)
22:52 < slackbot> <hlb> 相關網站 XD
22:53 < slackbot> <clkao> 發現這個超厲害：http://statsvy.dgbas.gov.tw/43/43mos/query/wrkqry.asp # 只是這配色實在太屌了
22:54 < slackbot> <yhsiang> 那個海生物圖片是怎麼回事 @@
22:54 < slackbot> <seadog007> 這是FP
22:54 < slackbot> <seadog007> 的圖
23:12 < slackbot> <lanf0n> 看來亂講話有可能被查水錶了........ ((大誤
23:13 < pcchou> 有人提到海洋生物嗎
23:13 < yhsiang> pcchou: 沒有人提到天才駭客
23:13 < pcchou> yhsiang: oh
23:14 < pcchou> yhsiang: 之後他再出現 要催促他快去寫稿
23:14 < yhsiang> pcchou: 我無法控制天才駭客 >"<
23:14 < pcchou> yhsiang: 嗚嗚 你可以譴責他
23:16 < yhsiang> 我現在不譴責他 orz
23:20 < slackbot> <clkao> au: 突然好像完成 1/3 了 # <https://github.com/duncankl/ssh-mars>
23:20 < kcwu> slackbot's url: [duncankl/ssh-mars · GitHub]
23:26 < slackbot> <yhsiang> 已經插旗 XD
23:28 < slackbot> <moon_c> 這網頁配色好讓人煩躁...
23:28 < pcchou> yhsiang: 為啥不譴責他
23:28 < yhsiang> pcchou: 你無法譴責天才駭客的 ...
23:28 < pcchou> yhsiang: 你是被下蠱了嗎 :P
23:36 < slackbot> <seadog007> \YA/ LY不譴責我了
23:38 < pcchou> 樓上海生動物
23:38 < miaoski> 不知道 Oracle 裡面的 DES 是哪種 ... John the Ripper 有 traditional DES, BDES, AFS DES, NTLM DES ... etc.
23:40 < yhsiang> seadog007: 天才駭客記得要寫稿 >艸<
23:42 < miaoski> s/BDES/BSDI/
