--- Day changed 四  7月 09 2015
00:05 < slackbot3> <mrorz> wow 7 years ago
00:24 < slackbot3> <clkao> ronnywang: <http://www.pipelinedb.com/>
00:24 < kcwu> slackbot3's url: [PipelineDB—The Streaming SQL Database]
00:26 < kcwu> interesting idea
00:26 < slackbot3> <clkao> based on PG, of course
00:40 < slackbot3> <poga> wow
02:34 < slackbot3> <clkao> wildjcrt: should we upgrade http://community.g0v.tw ?
02:34 < kcwu> slackbot3's url: [新． g0v 後勤中心]
03:53 < dirty_> ls
03:53 < dirty_> ...
04:16 < dirty_> 用 react 要產生一個 m*n 的 table, 應該怎麼寫 <= 發覺我不會 orz
04:16 < dirty_> 之前都用是 .map
04:36 < dirty_> http://stackoverflow.com/questions/28950901/reactjs-create-dynamic-wrapper-element-in-map # 目前用這個
04:36 < kcwu> dirty_'s url: [loops - reactjs create dynamic wrapper element in map() - Stack Overflow]
07:23 < slackbot3> <wildjcrt> clkao: sure, I will do it.
09:28 < slackbot3> <pofeng> 有點離題，但是還是 po 一下: 【臺北市青年事務委員會徵求青年代表投身公共事務】
09:28 < slackbot3> 報名網址：<https://goo.gl/FUAv9y>
09:28 < kcwu> slackbot3's url: [臺北市青年事務委員會(Taipei Youth Commission) 徵選報名]
11:24 -!- kaze is now known as Guest51720
11:41 -!- chihchun_afk is now known as chihchun
13:22 -!- chihchun is now known as chihchun_afk
14:17 < slackbot3> <c9s> 有人知道 travis ci API 文件是用什麼產生的嗎?  <http://docs.travis-ci.com/api>
14:17 < slackbot3> strava 好像也是用同一套 <http://strava.github.io/api/>
14:17 < kcwu> slackbot3's url: [Travis CI - API Reference]
14:17 < kcwu> slackbot3's url: [Strava API Reference]
14:25 < slackbot3> <yhsiang> c9s: <https://github.com/travis-ci/travis-api> ?
14:25 < kcwu> slackbot3's url: [travis-ci/travis-api · GitHub]
14:26 < slackbot3> <c9s> yhsiang: 這樣看起來是某個 Gem ? <https://github.com/travis-ci/travis-api/blob/master/Gemfile>
14:26 < kcwu> slackbot3's url: [travis-api/Gemfile at master · travis-ci/travis-api · GitHub]
14:35 < slackbot3> <yhsiang> c9s: <https://github.com/travis-ci/docs-travis-ci-com> # 看起來是自己寫的 XD
14:35 < kcwu> slackbot3's url: [travis-ci/docs-travis-ci-com · GitHub]
14:35 < slackbot3> <c9s> ah, jekyll
14:35 < slackbot3> <c9s> XD
14:35 < slackbot3> <yhsiang> XD
14:35 < slackbot3> <c9s> 所以還是手寫
14:35 < slackbot3> <c9s> orz
14:36 < slackbot3> <yhsiang> c9s: 還是考慮 apiary ? XD
14:37 < slackbot3> <c9s> docs-travis-ci-com 好像跟 api travis doc 不一樣耶
14:37 < slackbot3> <c9s> docs travis 是 travis 的 blog
14:38 < slackbot3> <yhsiang> c9s: 他 travis-ci/travis-api 裡面寫 redirect 到 http://docs.travis.com/api XD
14:38 < slackbot3> <c9s> oops
14:38 < slackbot3> <yhsiang> 然後 我剛剛有比對一下內容是一樣的 XD
14:40 < slackbot3> <yhsiang> hmm 在咖啡店，隔壁一直在談 open source …
14:42 < slackbot3> <dirty> @yhsiang: 然後就亂入啊
14:43 < slackbot3> <yhsiang> 可是我左邊坐了一位 open source 大師 tkirby :smile:
14:44 < slackbot3> <dirty> 都可以打麻將了 XD
14:44 < slackbot3> <c9s> yhsiang: 發現是 slate
14:44 < slackbot3> <c9s> tripit 做的
14:44 < slackbot3> <c9s> <https://github.com/tripit/slate>
14:44 < kcwu> slackbot3's url: [tripit/slate · GitHub]
14:47 < slackbot3> <yhsiang> 有 docker support 欸 XD
14:52 < slackbot3> <jimyhuang> eric: ping
14:53 < slackbot3> <eric> ping?
14:53 < slackbot3> <jimyhuang> eric: 我是覺得， <https://github.com/g0v/animal.coa> 你們下個指令，每天自動 pull 資料到你們自己的機器、環境即可。你們機器那裡再自行處理 csv 轉 mysql 事務
14:53 < kcwu> slackbot3's url: [g0v/animal.coa · GitHub]
14:54 < slackbot3> <eric> 了解了  所以還是要有一台機器來處理csv轉mysql的部份
14:54 < slackbot3> <yutin> @yhsiang:  咖啡廳打麻將 也是一種新招
14:54 < slackbot3> <eric> 所以還是需要看在動社或是朋友的地方找機器來做這段
14:55 < slackbot3> <yutin> @eric 資料要全部整你到mysql？ mysql要放哪呢？
14:56 < slackbot3> <eric> @yutin mysql 可能需要找動社或是朋友的空間來放 還是有推薦的空間可以放的呢XD
14:57 < slackbot3> <yutin> 建議找網路上免費或付費的database 自架server 未來維護應該會成難題
14:57 < slackbot3> <yhsiang> 直接用 heroku 跑 DAT ?
14:58 < slackbot3> <yhsiang> 喔 mysql 是必須的話 那就沒辦法 XD
14:58 < slackbot3> <eric> 了解  因為那時候是想說到時候可以變成前端顯示、統計、或是認養app用的database XD
14:59 < slackbot3> <eric> 謝謝!  那我們再評估看看
14:59 < slackbot3> <yutin> heroku 不錯, 或parse
14:59 < slackbot3> <yutin> mysql 可能就要用 aws或google app
14:59 < slackbot3> <fourdollars> 不可以用 pgrest 嗎？ g0v 不是已經有在用了？
15:00 < slackbot3> <yhsiang> pgrest 也是要 postgres
15:01 < slackbot3> <yutin> 如果資料量不大而且不需要非常即時的話 轉json 很多地方可以放
15:01 < slackbot3> <yhsiang> 請 sheethub support 定期放到 sheethub 上 XDD
15:03 < slackbot3> <fourdollars> 我的意思直接使用目前 g0v 已經架設好的 pgrest 服務就好了，如果有的話？
15:03 < slackbot3> <evan> 可以只存json那就mongodb hq 免費
15:03 < slackbot3> <jimyhuang> eric: 之前我印象 au 有提過（講錯請au直接修正），就未來若哪個 source 壞了，可以直接找當初爬資料的人，你們專心維護 csv > mysql 即可 :stuck_out_tongue:
15:04 < slackbot3> <eric> @fourdollars: 請問你說的是這個嗎?  <https://github.com/pgrest/pgrest>
15:04 < kcwu> slackbot3's url: [pgrest/pgrest · GitHub]
15:04 < slackbot3> <yurenju> blood 是用 iron 排 scheduled task commit 回 github 的 gh-pages 不失為一個無 server 的好方案
15:04 < slackbot3> <fourdollars> @eric 是啊～ <http://pgre.st/>
15:04 < kcwu> slackbot3's url: [PgREST: Node.js in the Database]
15:05 < slackbot3> <yurenju> <https://github.com/g0v/blood>
15:05 < slackbot3> <eric> @jimyhuang:  好的  感謝提醒!
15:05 < kcwu> slackbot3's url: [g0v/blood · GitHub]
15:06 < slackbot3> <yurenju> commit 回去變成還附歷史資料 XD
15:06 < slackbot3> <jimyhuang> 問一下，不曉得如果全部放 gh-pages，要做統計時，有什麼好的 solution / program 嗎？
15:07 < slackbot3> <yurenju> @jimyhuang: 我目前只有 commit 還沒分析，但是理論上可以用 git client 一個個 checkout commit 來展開歷史資料
15:07 < slackbot3> <yurenju> <https://github.com/g0v/blood/commits/gh-pages> 像這樣
15:07 < kcwu> slackbot3's url: [Commits · g0v/blood · GitHub]
15:07 < slackbot3> <jimyhuang> 我想到的只有，直接用 d3js 做前端，就不用 db 了 XD
15:08 < slackbot3> <tkirby> yo!
15:08 < slackbot3> <yhsiang> yo!
15:09 < FourDollars> 不用 db 的前端？資料要存在哪裡？
15:10 < slackbot3> <jimyhuang> yurenju: 感謝
15:11 < slackbot3> <yurenju> <https://github.com/creationix/js-git>
15:11 < kcwu> slackbot3's url: [creationix/js-git · GitHub]
15:11 < slackbot3> <jimyhuang> fourdollars: 我意思是說，如果只是要統計數字的話，好像用 d3js 讀 csv 過來，用 client browser js 算一算即可 XD
15:12 < slackbot3> <eric> @yurenju:  好的  謝謝!  我來參考看看blood
15:13 < FourDollars> 嗯，感覺提供資料的網站會被流量塞爆（如果用量大的話）。
15:13 < slackbot3> <yurenju> @eric, 你也可以申請個 http://iron.io，玩一下他的 worker, 簡單的說他可以讓你上傳一個 node.js 的 script, 然後可以定期觸發他跑
15:13 < slackbot3> <yurenju> 像是我是一個小時跑一次
15:13 < slackbot3> <yurenju> 每個月有免費十小時可以用
15:14 < FourDollars> 如果是定時去拿 csv 然後 commit 到 github pages 上面，再從 github pages 上面撈資料感覺也許還不錯。 
15:15 < FourDollars> 也許也可以把 csv 轉成 json 一起 commit 到 github pages
15:16 < FourDollars> 這樣看要用 d3js 或是其它程式都可以用同一份資料
15:16 < slackbot3> <eric> @yurenju: 好的  我來試試  好像滿有趣的XD
15:17 < slackbot3> <yurenju> @eric:  高村長 @clkao 介紹的好東西！
15:17 < FourDollars> @yurenju++
17:03 < slackbot3> <clkao> 為什麼 pm5 要來報 bootcamp~~
17:04 < pm51> ?
17:04 < pm51> 好像蠻好玩的嘛
17:07 < slackbot3> <yhsiang> 去當助教吧 :stuck_out_tongue:
17:07 -!- pm51 is now known as pm5
17:13 < pm5> 學生身份需要~
17:41 < slackbot3> <chihao> 因為看起來很年輕？
18:37 -!- chihchun_afk is now known as chihchun
19:52 -!- chihchun is now known as chihchun_afk
21:06 < slackbot3> <miaoski> acechen: 昨天以為讀數穩定了 (讀 250 次取平均) 結果不然...
21:06 < slackbot3> <miaoski> <https://plot.ly/~miaoski/18/pm-25-monitoring/?share_key=ZB5t4QNm4LzQhBq3XBsO87>
21:06 < kcwu> slackbot3's url: [Plotly]
21:19 < slackbot3> <clkao> 賀 muyueh 地圖視覺化額滿！
22:35 < slackbot3> <ggm> 回個舊文 mongodb hq (改名為 http://compose.io 了) 沒有免費了吧？只有 30 day trial
22:35 < kcwu> slackbot3's url: [MongoDB, Redis, Elasticsearch, RethinkDB, & PostgreSQL Hosting with Compose | Compose]
22:35 < yhsiang> 沒有～
23:09 < slackbot3> <yutin> ping lukechi
23:09 < slackbot3> <yutin> ping @lukechi
